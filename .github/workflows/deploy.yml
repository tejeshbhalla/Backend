name: Deploy to Django server

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
        
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Kill current process on port 8000
      run: |
        lsof -ti :8000 | xargs kill -9 || true

    - name: Deploy to server
      env:
        PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
        HOST: ${{ secrets.HOST }}
        USER: ${{ secrets.USER }}
        APP_DIR: ${{ secrets.APP_DIR }}
      run: |
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        rsync -e "ssh -i private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" --archive --compress --delete . "$USER@$HOST":"$APP_DIR"
        ssh -i private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$USER@$HOST" "cd $APP_DIR/.. && source venv/bin/activate && cd $APP_DIR && pip install -r requirements.txt && python manage.py migrate && gunicorn your_project_name.wsgi -b 0.0.0.0:8000 --daemon"
        ssh -i private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$USER@$HOST" "cd $APP_DIR && source ../venv/bin/activate && pip install -r requirements.txt && gunicorn Varency.wsgi -b 0.0.0.0:8000 --daemon"
        rm -f private_key.pem
